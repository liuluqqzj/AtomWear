; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\output\ble_debug_assert_handler.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\output\ble_debug_assert_handler.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\..\..\Software\Include -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Device\Nordic\nRF51822\Include -DNRF51 -DBOARD_PCA10001 -DNRF51_DBG --omf_browse=.\output\ble_debug_assert_handler.crf ..\..\..\Software\Source\ble_lib\ble_debug_assert_handler.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  ble_debug_assert_handler PROC
;;;23     // WARNING -         FOR DEBUG PURPOSES ONLY.         - WARNING
;;;24     void ble_debug_assert_handler(uint32_t error_code, uint32_t line_num, const uint8_t * p_file_name)
000000  4605              MOV      r5,r0
;;;25     {
000002  460c              MOV      r4,r1
000004  4616              MOV      r6,r2
;;;26         // Copying parameters to static variables because parameters may not be accessible in debugger.
;;;27         static volatile uint8_t  s_file_name[MAX_LENGTH_FILENAME];
;;;28         static volatile uint16_t s_line_num;
;;;29         static volatile uint32_t s_error_code;    
;;;30             
;;;31         strncpy((char *)s_file_name, (const char *)p_file_name, MAX_LENGTH_FILENAME - 1);
000006  227f              MOVS     r2,#0x7f
000008  4631              MOV      r1,r6
00000a  480b              LDR      r0,|L1.56|
00000c  f7fffffe          BL       strncpy
;;;32         s_file_name[MAX_LENGTH_FILENAME - 1] = '\0';
000010  2100              MOVS     r1,#0
000012  4809              LDR      r0,|L1.56|
000014  3060              ADDS     r0,r0,#0x60
000016  77c1              STRB     r1,[r0,#0x1f]
;;;33         s_line_num                           = line_num;
000018  4908              LDR      r1,|L1.60|
00001a  800c              STRH     r4,[r1,#0]
;;;34         s_error_code                         = error_code;
00001c  4808              LDR      r0,|L1.64|
00001e  6005              STR      r5,[r0,#0]  ; s_error_code
;;;35         UNUSED_VARIABLE(s_file_name);
;;;36         UNUSED_VARIABLE(s_line_num);
000020  4608              MOV      r0,r1
000022  8800              LDRH     r0,[r0,#0]  ; s_line_num
;;;37         UNUSED_VARIABLE(s_error_code);    
000024  4806              LDR      r0,|L1.64|
000026  6800              LDR      r0,[r0,#0]  ; s_error_code
;;;38     
;;;39         // WARNING: The PRIMASK register is set to disable ALL interrups during writing the error log.
;;;40         // 
;;;41         // Do not use __disable_irq() in normal operation.
;;;42         __disable_irq();
000028  b672              CPSID    i
;;;43     
;;;44         // This function will write error code, filename, and line number to the flash.
;;;45         // In addition, the Cortex-M0 stack memory will also be written to the flash.
;;;46         (void) ble_error_log_write(error_code, p_file_name, line_num);
00002a  b2a2              UXTH     r2,r4
00002c  4631              MOV      r1,r6
00002e  4628              MOV      r0,r5
000030  f7fffffe          BL       ble_error_log_write
;;;47     
;;;48         // For debug purposes, this function never returns.
;;;49         // Attach a debugger for tracing the error cause.
;;;50         for (;;)
000034  bf00              NOP      
                  |L1.54|
000036  e7fe              B        |L1.54|
;;;51         {
;;;52             // Do nothing.
;;;53         }
;;;54     }
;;;55     
                          ENDP

                  |L1.56|
                          DCD      s_file_name
                  |L1.60|
                          DCD      s_line_num
                  |L1.64|
                          DCD      s_error_code

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  s_file_name
                          %        128

                          AREA ||.data||, DATA, ALIGN=2

                  s_line_num
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  s_error_code
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Software\\Source\\ble_lib\\ble_debug_assert_handler.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___26_ble_debug_assert_handler_c_be844777____REV16|
#line 115 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___26_ble_debug_assert_handler_c_be844777____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___26_ble_debug_assert_handler_c_be844777____REVSH|
#line 130
|__asm___26_ble_debug_assert_handler_c_be844777____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
