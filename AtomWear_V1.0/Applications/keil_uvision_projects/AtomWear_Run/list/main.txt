; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\output\main.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\output\main.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\..\..\Software\Include -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Device\Nordic\nRF51822\Include -DNRF51 -DBOARD_PCA10001 -DNRF51_DBG --omf_browse=.\output\main.crf main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  main PROC
;;;36     
;;;37     int main()
000000  f7fffffe          BL       system_module_init
;;;38     {      
;;;39         system_module_init();  
;;;40             
;;;41         // default work mode
;;;42         system_default_work_mode_init();
000004  f7fffffe          BL       system_default_work_mode_init
;;;43         
;;;44             
;;;45         system_startup();
000008  f7fffffe          BL       system_startup
;;;46     
;;;47         for( ; ;)   // depend on sys click
00000c  bf00              NOP      
                  |L1.14|
;;;48         {             
;;;49            system_state_detect();
00000e  f7fffffe          BL       system_state_detect
000012  e7fc              B        |L1.14|
;;;50         }
;;;51     }
;;;52     //end
                          ENDP


;*** Start embedded assembler ***

#line 1 "main.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 115 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_main____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 130
|__asm___6_main_c_main____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_main_c_main__nrf_delay_us|
#line 8 "..\\..\\..\\Software\\Include\\nrf_delay.h"
|__asm___6_main_c_main__nrf_delay_us| PROC
#line 9

loop
 SUBS R0, R0, #1
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 BNE loop
 BX LR
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
