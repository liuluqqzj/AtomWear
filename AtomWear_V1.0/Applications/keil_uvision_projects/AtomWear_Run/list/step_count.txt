; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\output\step_count.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\output\step_count.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\..\..\Software\Include -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Device\Nordic\nRF51822\Include -DNRF51 -DBOARD_PCA10001 -DNRF51_DBG --omf_browse=.\output\step_count.crf ..\..\..\Software\Source\step_count\step_count.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  CRC_CHECK PROC
;;;44      *Data send adapt CRC16 verification,The following is the function of CRC16,please refer*/
;;;45     unsigned short CRC_CHECK(unsigned char *Buf, unsigned char CRC_CNT)
000000  b570              PUSH     {r4-r6,lr}
;;;46     {
000002  4602              MOV      r2,r0
000004  460b              MOV      r3,r1
;;;47         unsigned short CRC_Temp;
;;;48         unsigned char i,j;
;;;49         CRC_Temp = 0xffff;
000006  48fe              LDR      r0,|L1.1024|
;;;50     
;;;51         for (i=0; i<CRC_CNT; i++)
000008  2100              MOVS     r1,#0
00000a  e012              B        |L1.50|
                  |L1.12|
;;;52         {
;;;53             CRC_Temp ^= Buf[i];
00000c  5c55              LDRB     r5,[r2,r1]
00000e  4068              EORS     r0,r0,r5
;;;54             for (j=0; j<8; j++)
000010  2400              MOVS     r4,#0
000012  e00a              B        |L1.42|
                  |L1.20|
;;;55             {
;;;56                 if (CRC_Temp & 0x01)
000014  07c5              LSLS     r5,r0,#31
000016  0fed              LSRS     r5,r5,#31
000018  d004              BEQ      |L1.36|
;;;57                     CRC_Temp = (CRC_Temp >>1 ) ^ 0xa001;
00001a  1045              ASRS     r5,r0,#1
00001c  4ef9              LDR      r6,|L1.1028|
00001e  4075              EORS     r5,r5,r6
000020  4628              MOV      r0,r5
000022  e000              B        |L1.38|
                  |L1.36|
;;;58                 else
;;;59                     CRC_Temp = CRC_Temp >> 1;
000024  1040              ASRS     r0,r0,#1
                  |L1.38|
000026  1c65              ADDS     r5,r4,#1              ;54
000028  b2ec              UXTB     r4,r5                 ;54
                  |L1.42|
00002a  2c08              CMP      r4,#8                 ;54
00002c  dbf2              BLT      |L1.20|
00002e  1c4d              ADDS     r5,r1,#1              ;51
000030  b2e9              UXTB     r1,r5                 ;51
                  |L1.50|
000032  4299              CMP      r1,r3                 ;51
000034  dbea              BLT      |L1.12|
;;;60             }
;;;61         }
;;;62         return(CRC_Temp);
;;;63     }
000036  bd70              POP      {r4-r6,pc}
;;;64     
                          ENDP

                  byte_to_word PROC
;;;65      
;;;66     int16_t byte_to_word(uint8_t LSB, uint8_t MSB)
000038  b510              PUSH     {r4,lr}
;;;67     {
00003a  4602              MOV      r2,r0
;;;68          
;;;69         int16_t acce;
;;;70         acce = MSB;
00003c  4608              MOV      r0,r1
;;;71         acce = acce<<6;	 
00003e  0180              LSLS     r0,r0,#6
;;;72         acce += ( LSB>>2 );	 
000040  1093              ASRS     r3,r2,#2
000042  1818              ADDS     r0,r3,r0
;;;73     
;;;74         //00 10 0000 0000 0000b£ 
;;;75         if( acce & 0x2000 )
000044  2301              MOVS     r3,#1
000046  035b              LSLS     r3,r3,#13
000048  4218              TST      r0,r3
00004a  d011              BEQ      |L1.112|
;;;76         {
;;;77             acce = ~acce;
00004c  43c0              MVNS     r0,r0
;;;78             acce &= ~0xc000;     
00004e  2403              MOVS     r4,#3
000050  03a4              LSLS     r4,r4,#14
000052  4603              MOV      r3,r0
000054  43a3              BICS     r3,r3,r4
000056  b218              SXTH     r0,r3
;;;79             acce++;
000058  1c43              ADDS     r3,r0,#1
00005a  b218              SXTH     r0,r3
;;;80             g_sum += acce*acce;       
00005c  4603              MOV      r3,r0
00005e  4343              MULS     r3,r0,r3
000060  4ce9              LDR      r4,|L1.1032|
000062  6824              LDR      r4,[r4,#0]  ; g_sum
000064  191b              ADDS     r3,r3,r4
000066  4ce8              LDR      r4,|L1.1032|
000068  6023              STR      r3,[r4,#0]  ; g_sum
;;;81             acce = -acce;
00006a  4243              RSBS     r3,r0,#0
00006c  b218              SXTH     r0,r3
                  |L1.110|
;;;82             return acce;	   
;;;83         }
;;;84         else
;;;85         {
;;;86             g_sum += acce*acce;
;;;87             return acce;
;;;88         }
;;;89     }
00006e  bd10              POP      {r4,pc}
                  |L1.112|
000070  4603              MOV      r3,r0                 ;86
000072  4343              MULS     r3,r0,r3              ;86
000074  4ce4              LDR      r4,|L1.1032|
000076  6824              LDR      r4,[r4,#0]            ;86  ; g_sum
000078  191b              ADDS     r3,r3,r4              ;86
00007a  4ce3              LDR      r4,|L1.1032|
00007c  6023              STR      r3,[r4,#0]            ;86  ; g_sum
00007e  bf00              NOP                            ;87
000080  e7f5              B        |L1.110|
;;;90     
                          ENDP

                  bma180_get_mo_value PROC
;;;95     // x,y,z 
;;;96     uint16_t bma180_get_mo_value()
000082  b570              PUSH     {r4-r6,lr}
;;;97     {
000084  b086              SUB      sp,sp,#0x18
;;;98         uint8_t rec[6],i;
;;;99         uint16_t acce;
;;;100        uint32_t m_acce = 0;
000086  2600              MOVS     r6,#0
;;;101    
;;;102        //gensor_read(rec);
;;;103        for(i=0; i<3; i++)
000088  2500              MOVS     r5,#0
00008a  e019              B        |L1.192|
                  |L1.140|
;;;104        {
;;;105            acce = rec[2*i+1];
00008c  0068              LSLS     r0,r5,#1
00008e  1c40              ADDS     r0,r0,#1
000090  a904              ADD      r1,sp,#0x10
000092  5c0c              LDRB     r4,[r1,r0]
;;;106            acce = acce<<6;	 
000094  01a4              LSLS     r4,r4,#6
;;;107            acce += ( rec[2*i]>>2 );
000096  0068              LSLS     r0,r5,#1
000098  5c08              LDRB     r0,[r1,r0]
00009a  1080              ASRS     r0,r0,#2
00009c  1904              ADDS     r4,r0,r4
;;;108    
;;;109            
;;;110            if( acce & 0x2000 )
00009e  2001              MOVS     r0,#1
0000a0  0340              LSLS     r0,r0,#13
0000a2  4204              TST      r4,r0
0000a4  d007              BEQ      |L1.182|
;;;111            {
;;;112                acce = ~acce;
0000a6  43e0              MVNS     r0,r4
0000a8  b284              UXTH     r4,r0
;;;113                acce &= ~0xc000;     
0000aa  2103              MOVS     r1,#3
0000ac  0389              LSLS     r1,r1,#14
0000ae  4620              MOV      r0,r4
0000b0  4388              BICS     r0,r0,r1
0000b2  4604              MOV      r4,r0
;;;114                acce++;
0000b4  1c64              ADDS     r4,r4,#1
                  |L1.182|
;;;115            }
;;;116            m_acce += acce*acce;
0000b6  4620              MOV      r0,r4
0000b8  4360              MULS     r0,r4,r0
0000ba  1986              ADDS     r6,r0,r6
0000bc  1c68              ADDS     r0,r5,#1              ;103
0000be  b2c5              UXTB     r5,r0                 ;103
                  |L1.192|
0000c0  2d03              CMP      r5,#3                 ;103
0000c2  dbe3              BLT      |L1.140|
;;;117        }
;;;118        return (uint16_t)sqrt(m_acce);
0000c4  4630              MOV      r0,r6
0000c6  f7fffffe          BL       __aeabi_ui2d
0000ca  9101              STR      r1,[sp,#4]
0000cc  9000              STR      r0,[sp,#0]
0000ce  f7fffffe          BL       sqrt
0000d2  9103              STR      r1,[sp,#0xc]
0000d4  9002              STR      r0,[sp,#8]
0000d6  f7fffffe          BL       __aeabi_d2uiz
0000da  b280              UXTH     r0,r0
;;;119    }
0000dc  b006              ADD      sp,sp,#0x18
0000de  bd70              POP      {r4-r6,pc}
;;;120    
                          ENDP

                  pedometer_init PROC
;;;137    
;;;138    void pedometer_init()
0000e0  48ca              LDR      r0,|L1.1036|
;;;139    {
;;;140        peak[0].value = peak[1].value = peak[2].value = peak[3].value = peak[4].value = G_STAND;
0000e2  49cb              LDR      r1,|L1.1040|
0000e4  8208              STRH     r0,[r1,#0x10]
0000e6  8188              STRH     r0,[r1,#0xc]
0000e8  8108              STRH     r0,[r1,#8]
0000ea  8088              STRH     r0,[r1,#4]
0000ec  8008              STRH     r0,[r1,#0]
;;;141        valley[0].value = valley[1].value = valley[2].value = valley[3].value = valley[4].value =G_STAND;
0000ee  49c9              LDR      r1,|L1.1044|
0000f0  8208              STRH     r0,[r1,#0x10]
0000f2  8188              STRH     r0,[r1,#0xc]
0000f4  8108              STRH     r0,[r1,#8]
0000f6  8088              STRH     r0,[r1,#4]
0000f8  8008              STRH     r0,[r1,#0]
;;;142        peak[0].time = peak[1].time = peak[2].time = peak[3].time = peak[4].time = 0;
0000fa  2100              MOVS     r1,#0
0000fc  48c4              LDR      r0,|L1.1040|
0000fe  7481              STRB     r1,[r0,#0x12]
000100  7381              STRB     r1,[r0,#0xe]
000102  7281              STRB     r1,[r0,#0xa]
000104  7181              STRB     r1,[r0,#6]
000106  7081              STRB     r1,[r0,#2]
;;;143        valley[0].time = valley[1].time = valley[2].time = valley[3].time = valley[4].time = 0;
000108  48c2              LDR      r0,|L1.1044|
00010a  7481              STRB     r1,[r0,#0x12]
00010c  7381              STRB     r1,[r0,#0xe]
00010e  7281              STRB     r1,[r0,#0xa]
000110  7181              STRB     r1,[r0,#6]
000112  7081              STRB     r1,[r0,#2]
;;;144    
;;;145        que_value[0] = que_value[1] = que_value[2] = que_value[3] = que_value[4] = cur.value = pre.value = G_STAND;
000114  48bd              LDR      r0,|L1.1036|
000116  49c0              LDR      r1,|L1.1048|
000118  8008              STRH     r0,[r1,#0]
00011a  49c0              LDR      r1,|L1.1052|
00011c  8008              STRH     r0,[r1,#0]
00011e  49c0              LDR      r1,|L1.1056|
000120  8108              STRH     r0,[r1,#8]
000122  80c8              STRH     r0,[r1,#6]
000124  8088              STRH     r0,[r1,#4]
000126  8048              STRH     r0,[r1,#2]
000128  8008              STRH     r0,[r1,#0]
;;;146        cur.time = pre.time = 0;
00012a  2000              MOVS     r0,#0
00012c  49ba              LDR      r1,|L1.1048|
00012e  7088              STRB     r0,[r1,#2]
000130  49ba              LDR      r1,|L1.1052|
000132  7088              STRB     r0,[r1,#2]
;;;147    
;;;148        spe_num = que_num = 0;
000134  49bb              LDR      r1,|L1.1060|
000136  7008              STRB     r0,[r1,#0]
000138  49bb              LDR      r1,|L1.1064|
00013a  7008              STRB     r0,[r1,#0]
;;;149    
;;;150        Thr_Up = THRESHOLD_UP;       // 1.3g high
00013c  48b3              LDR      r0,|L1.1036|
00013e  30ca              ADDS     r0,r0,#0xca
000140  49ba              LDR      r1,|L1.1068|
000142  8008              STRH     r0,[r1,#0]
;;;151        Thr_Down = THRESHOLD_DOWN;     // 0.8g low
000144  48b1              LDR      r0,|L1.1036|
000146  3865              SUBS     r0,r0,#0x65
000148  49b9              LDR      r1,|L1.1072|
00014a  8008              STRH     r0,[r1,#0]
;;;152        Thr_Wide = THRESHOLD_WIDE;      // 0.8g wide
00014c  48b9              LDR      r0,|L1.1076|
00014e  49ba              LDR      r1,|L1.1080|
000150  8008              STRH     r0,[r1,#0]
;;;153    
;;;154        deadline = timing = 0;  // 0.02s 
000152  2000              MOVS     r0,#0
000154  49b9              LDR      r1,|L1.1084|
000156  7008              STRB     r0,[r1,#0]
000158  49b9              LDR      r1,|L1.1088|
00015a  7008              STRB     r0,[r1,#0]
;;;155        step_count = 0;
00015c  49b9              LDR      r1,|L1.1092|
00015e  6008              STR      r0,[r1,#0]  ; step_count
;;;156        
;;;157    //////////////////////////////////////////////////////
;;;158    }
000160  4770              BX       lr
;;;159    
                          ENDP

                  timer1_startup PROC
;;;162    
;;;163    void timer1_startup()
000162  2001              MOVS     r0,#1
;;;164    {
;;;165        NRF_TIMER1->TASKS_START    = 1;
000164  49b8              LDR      r1,|L1.1096|
000166  6008              STR      r0,[r1,#0]
;;;166    }
000168  4770              BX       lr
;;;167    
                          ENDP

                  timer1_stop PROC
;;;168    void timer1_stop()
00016a  2001              MOVS     r0,#1
;;;169    {
;;;170        NRF_TIMER1->TASKS_STOP    = 1;
00016c  49b6              LDR      r1,|L1.1096|
00016e  6048              STR      r0,[r1,#4]
;;;171        NRF_TIMER1->INTENSET       = TIMER_INTENSET_COMPARE0_Disabled << TIMER_INTENSET_COMPARE0_Pos;   // ¿ªÍ¨ÑÓÊ±ÖÐ¶Ï1
000170  2000              MOVS     r0,#0
000172  49b6              LDR      r1,|L1.1100|
000174  6048              STR      r0,[r1,#4]
;;;172        //NRF_TIMER1->INTENSET       = TIMER_INTENSET_COMPARE1_Disabled << TIMER_INTENSET_COMPARE0_Pos;   // ¿ªÍ¨ÑÓÊ±ÖÐ¶Ï1
;;;173    }
000176  4770              BX       lr
;;;174    
                          ENDP

                  pedometer_startup PROC
;;;185    
;;;186    void pedometer_startup()
000178  b538              PUSH     {r3-r5,lr}
;;;187    {
;;;188        if(deadline >= 200)
00017a  48b1              LDR      r0,|L1.1088|
00017c  7800              LDRB     r0,[r0,#0]  ; deadline
00017e  28c8              CMP      r0,#0xc8
000180  db4d              BLT      |L1.542|
;;;189        {
;;;190            xprintf(" INT  2s.\r\n");
000182  a0b3              ADR      r0,|L1.1104|
000184  f7fffffe          BL       xprintf
;;;191           /*--------------------------------------------------------------*/
;;;192            system_countdown_update();
000188  f7fffffe          BL       system_countdown_update
;;;193            if( (get_sleep_countdown() > 120) && (get_pedo_slice_handle_state() == true ) )   // 2min = 2*60s = 120 *1s
00018c  f7fffffe          BL       get_sleep_countdown
000190  2878              CMP      r0,#0x78
000192  d905              BLS      |L1.416|
000194  f7fffffe          BL       get_pedo_slice_handle_state
000198  2800              CMP      r0,#0
00019a  d001              BEQ      |L1.416|
;;;194            {
;;;195                pedo_data_end_handle();
00019c  f7fffffe          BL       pedo_data_end_handle
                  |L1.416|
;;;196            }        
;;;197            /*--------------------------------------------------------------*/
;;;198            
;;;199            Thr_Up = THRESHOLD_UP;          // 1.2g high
0001a0  489a              LDR      r0,|L1.1036|
0001a2  30ca              ADDS     r0,r0,#0xca
0001a4  49a1              LDR      r1,|L1.1068|
0001a6  8008              STRH     r0,[r1,#0]
;;;200            Thr_Down = THRESHOLD_DOWN;      // 0.8g low
0001a8  4898              LDR      r0,|L1.1036|
0001aa  3865              SUBS     r0,r0,#0x65
0001ac  49a0              LDR      r1,|L1.1072|
0001ae  8008              STRH     r0,[r1,#0]
;;;201            Thr_Wide = THRESHOLD_WIDE;      // 0.8g wide
0001b0  48a0              LDR      r0,|L1.1076|
0001b2  49a1              LDR      r1,|L1.1080|
0001b4  8008              STRH     r0,[r1,#0]
;;;202    
;;;203            peak[0].value = peak[1].value = peak[2].value = peak[3].value = peak[4].value = G_STAND;
0001b6  4895              LDR      r0,|L1.1036|
0001b8  4995              LDR      r1,|L1.1040|
0001ba  8208              STRH     r0,[r1,#0x10]
0001bc  8188              STRH     r0,[r1,#0xc]
0001be  8108              STRH     r0,[r1,#8]
0001c0  8088              STRH     r0,[r1,#4]
0001c2  8008              STRH     r0,[r1,#0]
;;;204            valley[0].value = valley[1].value = valley[2].value = valley[3].value = valley[4].value =G_STAND;
0001c4  4993              LDR      r1,|L1.1044|
0001c6  8208              STRH     r0,[r1,#0x10]
0001c8  8188              STRH     r0,[r1,#0xc]
0001ca  8108              STRH     r0,[r1,#8]
0001cc  8088              STRH     r0,[r1,#4]
0001ce  8008              STRH     r0,[r1,#0]
;;;205            peak[0].time = peak[1].time = peak[2].time = peak[3].time = peak[4].time = 0;
0001d0  2100              MOVS     r1,#0
0001d2  488f              LDR      r0,|L1.1040|
0001d4  7481              STRB     r1,[r0,#0x12]
0001d6  7381              STRB     r1,[r0,#0xe]
0001d8  7281              STRB     r1,[r0,#0xa]
0001da  7181              STRB     r1,[r0,#6]
0001dc  7081              STRB     r1,[r0,#2]
;;;206            valley[0].time = valley[1].time = valley[2].time = valley[3].time = valley[4].time = 0;
0001de  488d              LDR      r0,|L1.1044|
0001e0  7481              STRB     r1,[r0,#0x12]
0001e2  7381              STRB     r1,[r0,#0xe]
0001e4  7281              STRB     r1,[r0,#0xa]
0001e6  7181              STRB     r1,[r0,#6]
0001e8  7081              STRB     r1,[r0,#2]
;;;207            spe_num = 0;
0001ea  2000              MOVS     r0,#0
0001ec  498e              LDR      r1,|L1.1064|
0001ee  7008              STRB     r0,[r1,#0]
;;;208    
;;;209            que_value[0] = que_value[1] = que_value[2] = que_value[3] = que_value[4]  = cur.value = pre.value = G_STAND;
0001f0  4886              LDR      r0,|L1.1036|
0001f2  4989              LDR      r1,|L1.1048|
0001f4  8008              STRH     r0,[r1,#0]
0001f6  4989              LDR      r1,|L1.1052|
0001f8  8008              STRH     r0,[r1,#0]
0001fa  4989              LDR      r1,|L1.1056|
0001fc  8108              STRH     r0,[r1,#8]
0001fe  80c8              STRH     r0,[r1,#6]
000200  8088              STRH     r0,[r1,#4]
000202  8048              STRH     r0,[r1,#2]
000204  8008              STRH     r0,[r1,#0]
;;;210            cur.time = pre.time = 0;
000206  2000              MOVS     r0,#0
000208  4983              LDR      r1,|L1.1048|
00020a  7088              STRB     r0,[r1,#2]
00020c  4983              LDR      r1,|L1.1052|
00020e  7088              STRB     r0,[r1,#2]
;;;211            que_num = 0;
000210  4984              LDR      r1,|L1.1060|
000212  7008              STRB     r0,[r1,#0]
;;;212    
;;;213            deadline = timing = 0;  //  0.02s 
000214  4989              LDR      r1,|L1.1084|
000216  7008              STRB     r0,[r1,#0]
000218  4989              LDR      r1,|L1.1088|
00021a  7008              STRB     r0,[r1,#0]
00021c  e202              B        |L1.1572|
                  |L1.542|
;;;214    
;;;215        }
;;;216    
;;;217    
;;;218        else
;;;219        {
;;;220            timing ++;
00021e  4887              LDR      r0,|L1.1084|
000220  7800              LDRB     r0,[r0,#0]  ; timing
000222  1c40              ADDS     r0,r0,#1
000224  4985              LDR      r1,|L1.1084|
000226  7008              STRB     r0,[r1,#0]
;;;221            deadline = cur.time =  timing;
000228  4608              MOV      r0,r1
00022a  7800              LDRB     r0,[r0,#0]  ; timing
00022c  497b              LDR      r1,|L1.1052|
00022e  7088              STRB     r0,[r1,#2]
000230  4983              LDR      r1,|L1.1088|
000232  7008              STRB     r0,[r1,#0]
;;;222            if(++que_num ==5)   // que_num = (++que_num)%5
000234  487b              LDR      r0,|L1.1060|
000236  7800              LDRB     r0,[r0,#0]  ; que_num
000238  1c40              ADDS     r0,r0,#1
00023a  b2c0              UXTB     r0,r0
00023c  4979              LDR      r1,|L1.1060|
00023e  7008              STRB     r0,[r1,#0]
000240  2805              CMP      r0,#5
000242  d101              BNE      |L1.584|
;;;223                que_num = 0;
000244  2000              MOVS     r0,#0
000246  7008              STRB     r0,[r1,#0]
                  |L1.584|
;;;224            que_value[que_num] = mma8452q_get_mo_value();
000248  f7fffffe          BL       mma8452q_get_mo_value
00024c  4975              LDR      r1,|L1.1060|
00024e  7809              LDRB     r1,[r1,#0]  ; que_num
000250  0049              LSLS     r1,r1,#1
000252  4a73              LDR      r2,|L1.1056|
000254  5250              STRH     r0,[r2,r1]
;;;225            cur.value = (que_value[0]+que_value[1]+que_value[2]+que_value[3]+que_value[4])/5;
000256  4611              MOV      r1,r2
000258  8809              LDRH     r1,[r1,#0]  ; que_value
00025a  8852              LDRH     r2,[r2,#2]  ; que_value
00025c  1889              ADDS     r1,r1,r2
00025e  4a70              LDR      r2,|L1.1056|
000260  8892              LDRH     r2,[r2,#4]  ; que_value
000262  1889              ADDS     r1,r1,r2
000264  4a6e              LDR      r2,|L1.1056|
000266  88d2              LDRH     r2,[r2,#6]  ; que_value
000268  1889              ADDS     r1,r1,r2
00026a  4a6d              LDR      r2,|L1.1056|
00026c  8912              LDRH     r2,[r2,#8]  ; que_value
00026e  1888              ADDS     r0,r1,r2
000270  2105              MOVS     r1,#5
000272  f7fffffe          BL       __aeabi_idivmod
000276  4969              LDR      r1,|L1.1052|
000278  8008              STRH     r0,[r1,#0]
;;;226    
;;;227            if(cur.value >= pre.value)
00027a  4608              MOV      r0,r1
00027c  8800              LDRH     r0,[r0,#0]  ; cur
00027e  4966              LDR      r1,|L1.1048|
000280  8809              LDRH     r1,[r1,#0]  ; pre
000282  4288              CMP      r0,r1
000284  db7e              BLT      |L1.900|
;;;228            {
;;;229                
;;;230    
;;;231                if(cur.value >= peak[spe_num].value)
000286  4865              LDR      r0,|L1.1052|
000288  8800              LDRH     r0,[r0,#0]  ; cur
00028a  4967              LDR      r1,|L1.1064|
00028c  7809              LDRB     r1,[r1,#0]  ; spe_num
00028e  0089              LSLS     r1,r1,#2
000290  4a5f              LDR      r2,|L1.1040|
000292  5a51              LDRH     r1,[r2,r1]
000294  4288              CMP      r0,r1
000296  db21              BLT      |L1.732|
;;;232                {
;;;233                    // > peak
;;;234    
;;;235                    peak[spe_num].value =valley[spe_num].value = cur.value;
000298  4860              LDR      r0,|L1.1052|
00029a  8800              LDRH     r0,[r0,#0]  ; cur
00029c  4962              LDR      r1,|L1.1064|
00029e  7809              LDRB     r1,[r1,#0]  ; spe_num
0002a0  0089              LSLS     r1,r1,#2
0002a2  4a5c              LDR      r2,|L1.1044|
0002a4  5250              STRH     r0,[r2,r1]
0002a6  4960              LDR      r1,|L1.1064|
0002a8  7809              LDRB     r1,[r1,#0]  ; spe_num
0002aa  0089              LSLS     r1,r1,#2
0002ac  4a58              LDR      r2,|L1.1040|
0002ae  5250              STRH     r0,[r2,r1]
;;;236                    peak[spe_num].time = valley[spe_num].time = cur.time;
0002b0  485a              LDR      r0,|L1.1052|
0002b2  7880              LDRB     r0,[r0,#2]  ; cur
0002b4  495c              LDR      r1,|L1.1064|
0002b6  7809              LDRB     r1,[r1,#0]  ; spe_num
0002b8  0089              LSLS     r1,r1,#2
0002ba  4a56              LDR      r2,|L1.1044|
0002bc  1889              ADDS     r1,r1,r2
0002be  7088              STRB     r0,[r1,#2]
0002c0  4959              LDR      r1,|L1.1064|
0002c2  7809              LDRB     r1,[r1,#0]  ; spe_num
0002c4  0089              LSLS     r1,r1,#2
0002c6  4a52              LDR      r2,|L1.1040|
0002c8  1889              ADDS     r1,r1,r2
0002ca  7088              STRB     r0,[r1,#2]
;;;237    
;;;238                    pre.value = cur.value;
0002cc  4853              LDR      r0,|L1.1052|
0002ce  8800              LDRH     r0,[r0,#0]  ; cur
0002d0  4951              LDR      r1,|L1.1048|
0002d2  8008              STRH     r0,[r1,#0]
;;;239                    pre.time = cur.time;
0002d4  4851              LDR      r0,|L1.1052|
0002d6  7880              LDRB     r0,[r0,#2]  ; cur
0002d8  7088              STRB     r0,[r1,#2]
0002da  e1a3              B        |L1.1572|
                  |L1.732|
;;;240    
;;;241                }
;;;242                else  if( (cur.value < Thr_Down) || ( (peak[spe_num].value - valley[spe_num].value) > Thr_Wide) )    // µÍÓÚµÍãÐÖµÂð£¿»òÕß·ù¶ÈÂú×ã
0002dc  484f              LDR      r0,|L1.1052|
0002de  8800              LDRH     r0,[r0,#0]  ; cur
0002e0  4953              LDR      r1,|L1.1072|
0002e2  8809              LDRH     r1,[r1,#0]  ; Thr_Down
0002e4  4288              CMP      r0,r1
0002e6  db0e              BLT      |L1.774|
0002e8  484f              LDR      r0,|L1.1064|
0002ea  7800              LDRB     r0,[r0,#0]  ; spe_num
0002ec  0080              LSLS     r0,r0,#2
0002ee  4948              LDR      r1,|L1.1040|
0002f0  5a08              LDRH     r0,[r1,r0]
0002f2  494d              LDR      r1,|L1.1064|
0002f4  7809              LDRB     r1,[r1,#0]  ; spe_num
0002f6  0089              LSLS     r1,r1,#2
0002f8  4a46              LDR      r2,|L1.1044|
0002fa  5a51              LDRH     r1,[r2,r1]
0002fc  1a40              SUBS     r0,r0,r1
0002fe  494e              LDR      r1,|L1.1080|
000300  8809              LDRH     r1,[r1,#0]  ; Thr_Wide
000302  4288              CMP      r0,r1
000304  dd7a              BLE      |L1.1020|
                  |L1.774|
;;;243                {
;;;244    
;;;245                    if(valley[spe_num].time < 20)    // 0.2s 
000306  4848              LDR      r0,|L1.1064|
000308  7800              LDRB     r0,[r0,#0]  ; spe_num
00030a  0080              LSLS     r0,r0,#2
00030c  4941              LDR      r1,|L1.1044|
00030e  1840              ADDS     r0,r0,r1
000310  7880              LDRB     r0,[r0,#2]
000312  2814              CMP      r0,#0x14
000314  da07              BGE      |L1.806|
;;;246                    {
;;;247                        // peak[spe_num].value = valley[spe_num].value = G_STAND;
;;;248                        //peak[spe_num].time = valley[spe_num].time = 0;
;;;249    
;;;250                        pre.value = cur.value;
000316  4841              LDR      r0,|L1.1052|
000318  8800              LDRH     r0,[r0,#0]  ; cur
00031a  493f              LDR      r1,|L1.1048|
00031c  8008              STRH     r0,[r1,#0]
;;;251                        pre.time = cur.time;
00031e  483f              LDR      r0,|L1.1052|
000320  7880              LDRB     r0,[r0,#2]  ; cur
000322  7088              STRB     r0,[r1,#2]
000324  e17e              B        |L1.1572|
                  |L1.806|
;;;252                    }
;;;253                    else
;;;254                    {
;;;255                        if( peak[spe_num].value > Thr_Up )
000326  4840              LDR      r0,|L1.1064|
000328  7800              LDRB     r0,[r0,#0]  ; spe_num
00032a  0080              LSLS     r0,r0,#2
00032c  4938              LDR      r1,|L1.1040|
00032e  5a08              LDRH     r0,[r1,r0]
000330  493e              LDR      r1,|L1.1068|
000332  8809              LDRH     r1,[r1,#0]  ; Thr_Up
000334  4288              CMP      r0,r1
000336  dd62              BLE      |L1.1022|
;;;256                        {
;;;257                            // step count sucessful
;;;258                            /*--------------------------------------------------------------*/
;;;259                            pedo_data_sto_handle(valley[spe_num].time, peak[spe_num].value, valley[spe_num].value);
000338  4b3b              LDR      r3,|L1.1064|
00033a  781b              LDRB     r3,[r3,#0]  ; spe_num
00033c  009b              LSLS     r3,r3,#2
00033e  4c35              LDR      r4,|L1.1044|
000340  5ae2              LDRH     r2,[r4,r3]
000342  4b39              LDR      r3,|L1.1064|
000344  781b              LDRB     r3,[r3,#0]  ; spe_num
000346  009b              LSLS     r3,r3,#2
000348  4c31              LDR      r4,|L1.1040|
00034a  5ae1              LDRH     r1,[r4,r3]
00034c  4b36              LDR      r3,|L1.1064|
00034e  781b              LDRB     r3,[r3,#0]  ; spe_num
000350  009b              LSLS     r3,r3,#2
000352  4c30              LDR      r4,|L1.1044|
000354  191b              ADDS     r3,r3,r4
000356  7898              LDRB     r0,[r3,#2]
000358  f7fffffe          BL       pedo_data_sto_handle
;;;260                            clear_sleep_countdown();                       
00035c  f7fffffe          BL       clear_sleep_countdown
;;;261                            /*--------------------------------------------------------------*/
;;;262                            
;;;263                            step_count++;                        
000360  4838              LDR      r0,|L1.1092|
000362  6800              LDR      r0,[r0,#0]  ; step_count
000364  1c40              ADDS     r0,r0,#1
000366  4937              LDR      r1,|L1.1092|
000368  6008              STR      r0,[r1,#0]  ; step_count
;;;264                            xprintf("steps = %d. time =%d  peak = %d valley = %d \r\n", step_count, valley[spe_num].time, peak[spe_num].value, valley[spe_num].value );
00036a  482f              LDR      r0,|L1.1064|
00036c  7800              LDRB     r0,[r0,#0]  ; spe_num
00036e  0080              LSLS     r0,r0,#2
000370  4621              MOV      r1,r4
000372  5a08              LDRH     r0,[r1,r0]
000374  9000              STR      r0,[sp,#0]
000376  482c              LDR      r0,|L1.1064|
000378  7800              LDRB     r0,[r0,#0]  ; spe_num
00037a  0080              LSLS     r0,r0,#2
00037c  4924              LDR      r1,|L1.1040|
00037e  5a0b              LDRH     r3,[r1,r0]
000380  4829              LDR      r0,|L1.1064|
000382  e000              B        |L1.902|
                  |L1.900|
000384  e128              B        |L1.1496|
                  |L1.902|
000386  7800              LDRB     r0,[r0,#0]  ; spe_num
000388  0080              LSLS     r0,r0,#2
00038a  4621              MOV      r1,r4
00038c  1840              ADDS     r0,r0,r1
00038e  7882              LDRB     r2,[r0,#2]
000390  482c              LDR      r0,|L1.1092|
000392  6801              LDR      r1,[r0,#0]  ; step_count
000394  a031              ADR      r0,|L1.1116|
000396  f7fffffe          BL       xprintf
;;;265                            
;;;266                            timing = deadline = 0;
00039a  2000              MOVS     r0,#0
00039c  4928              LDR      r1,|L1.1088|
00039e  7008              STRB     r0,[r1,#0]
0003a0  4926              LDR      r1,|L1.1084|
0003a2  7008              STRB     r0,[r1,#0]
;;;267                            que_num = 0;
0003a4  491f              LDR      r1,|L1.1060|
0003a6  7008              STRB     r0,[r1,#0]
;;;268                            
;;;269                            if(spe_num == 4)
0003a8  481f              LDR      r0,|L1.1064|
0003aa  7800              LDRB     r0,[r0,#0]  ; spe_num
0003ac  2804              CMP      r0,#4
0003ae  d16d              BNE      |L1.1164|
;;;270                            {
;;;271                                spe_num = 0;
0003b0  2000              MOVS     r0,#0
0003b2  491d              LDR      r1,|L1.1064|
0003b4  7008              STRB     r0,[r1,#0]
;;;272                                Thr_Up = ( ( peak[0].value + peak[1].value + peak[2].value + peak[3].value + peak[4].value)/5 + THRESHOLD_UP)/2;
0003b6  4916              LDR      r1,|L1.1040|
0003b8  8809              LDRH     r1,[r1,#0]  ; peak
0003ba  4a15              LDR      r2,|L1.1040|
0003bc  8892              LDRH     r2,[r2,#4]  ; peak
0003be  1889              ADDS     r1,r1,r2
0003c0  4a13              LDR      r2,|L1.1040|
0003c2  8912              LDRH     r2,[r2,#8]  ; peak
0003c4  1889              ADDS     r1,r1,r2
0003c6  4a12              LDR      r2,|L1.1040|
0003c8  8992              LDRH     r2,[r2,#0xc]  ; peak
0003ca  1889              ADDS     r1,r1,r2
0003cc  4a10              LDR      r2,|L1.1040|
0003ce  8a12              LDRH     r2,[r2,#0x10]  ; peak
0003d0  1888              ADDS     r0,r1,r2
0003d2  2105              MOVS     r1,#5
0003d4  f7fffffe          BL       __aeabi_idivmod
0003d8  490c              LDR      r1,|L1.1036|
0003da  31ca              ADDS     r1,r1,#0xca
0003dc  1844              ADDS     r4,r0,r1
0003de  0fe0              LSRS     r0,r4,#31
0003e0  1900              ADDS     r0,r0,r4
0003e2  03c0              LSLS     r0,r0,#15
0003e4  0c00              LSRS     r0,r0,#16
0003e6  4911              LDR      r1,|L1.1068|
0003e8  8008              STRH     r0,[r1,#0]
;;;273                                Thr_Down = ( ( valley[0].value + valley[1].value + valley[2].value + valley[3].value + valley[4].value)/5 + THRESHOLD_DOWN)/2;
0003ea  490a              LDR      r1,|L1.1044|
0003ec  8809              LDRH     r1,[r1,#0]  ; valley
0003ee  4a09              LDR      r2,|L1.1044|
0003f0  8892              LDRH     r2,[r2,#4]  ; valley
0003f2  1889              ADDS     r1,r1,r2
0003f4  4a07              LDR      r2,|L1.1044|
0003f6  8912              LDRH     r2,[r2,#8]  ; valley
0003f8  1889              ADDS     r1,r1,r2
0003fa  e048              B        |L1.1166|
                  |L1.1020|
0003fc  e0e4              B        |L1.1480|
                  |L1.1022|
0003fe  e0db              B        |L1.1464|
                  |L1.1024|
                          DCD      0x0000ffff
                  |L1.1028|
                          DCD      0x0000a001
                  |L1.1032|
                          DCD      g_sum
                  |L1.1036|
                          DCD      0x000003f2
                  |L1.1040|
                          DCD      peak
                  |L1.1044|
                          DCD      valley
                  |L1.1048|
                          DCD      pre
                  |L1.1052|
                          DCD      ||cur||
                  |L1.1056|
                          DCD      que_value
                  |L1.1060|
                          DCD      que_num
                  |L1.1064|
                          DCD      spe_num
                  |L1.1068|
                          DCD      Thr_Up
                  |L1.1072|
                          DCD      Thr_Down
                  |L1.1076|
                          DCD      0x000002c3
                  |L1.1080|
                          DCD      Thr_Wide
                  |L1.1084|
                          DCD      timing
                  |L1.1088|
                          DCD      deadline
                  |L1.1092|
                          DCD      step_count
                  |L1.1096|
                          DCD      0x40009000
                  |L1.1100|
                          DCD      0x40009300
                  |L1.1104|
000450  20494e54          DCB      " INT  2s.\r\n",0
000454  20203273
000458  2e0d0a00
                  |L1.1116|
00045c  73746570          DCB      "steps = %d. time =%d  peak = %d valley = %d \r\n",0
000460  73203d20
000464  25642e20
000468  74696d65
00046c  203d2564
000470  20207065
000474  616b203d
000478  20256420
00047c  76616c6c
000480  6579203d
000484  20256420
000488  0d0a00  
00048b  00                DCB      0
                  |L1.1164|
00048c  e066              B        |L1.1372|
                  |L1.1166|
00048e  4a66              LDR      r2,|L1.1576|
000490  8992              LDRH     r2,[r2,#0xc]  ; valley
000492  1889              ADDS     r1,r1,r2
000494  4a64              LDR      r2,|L1.1576|
000496  8a12              LDRH     r2,[r2,#0x10]  ; valley
000498  1888              ADDS     r0,r1,r2
00049a  2105              MOVS     r1,#5
00049c  f7fffffe          BL       __aeabi_idivmod
0004a0  4962              LDR      r1,|L1.1580|
0004a2  1844              ADDS     r4,r0,r1
0004a4  0fe0              LSRS     r0,r4,#31
0004a6  1900              ADDS     r0,r0,r4
0004a8  03c0              LSLS     r0,r0,#15
0004aa  0c00              LSRS     r0,r0,#16
0004ac  4960              LDR      r1,|L1.1584|
0004ae  8008              STRH     r0,[r1,#0]
;;;274                                Thr_Wide = ( ( (peak[0].value - valley[0].value) + (peak[1].value - valley[1].value) + (peak[2].value - valley[2].value) + (peak[3].value - valley[3].value) + (peak[4].value - valley[4].value) )/5 + THRESHOLD_WIDE)/2;
0004b0  4960              LDR      r1,|L1.1588|
0004b2  8809              LDRH     r1,[r1,#0]  ; peak
0004b4  4a5c              LDR      r2,|L1.1576|
0004b6  8812              LDRH     r2,[r2,#0]  ; valley
0004b8  1a8a              SUBS     r2,r1,r2
0004ba  495e              LDR      r1,|L1.1588|
0004bc  8889              LDRH     r1,[r1,#4]  ; peak
0004be  4b5a              LDR      r3,|L1.1576|
0004c0  889b              LDRH     r3,[r3,#4]  ; valley
0004c2  1ac9              SUBS     r1,r1,r3
0004c4  1851              ADDS     r1,r2,r1
0004c6  4a5b              LDR      r2,|L1.1588|
0004c8  8912              LDRH     r2,[r2,#8]  ; peak
0004ca  4b57              LDR      r3,|L1.1576|
0004cc  891b              LDRH     r3,[r3,#8]  ; valley
0004ce  1ad2              SUBS     r2,r2,r3
0004d0  1889              ADDS     r1,r1,r2
0004d2  4a58              LDR      r2,|L1.1588|
0004d4  8992              LDRH     r2,[r2,#0xc]  ; peak
0004d6  4b54              LDR      r3,|L1.1576|
0004d8  899b              LDRH     r3,[r3,#0xc]  ; valley
0004da  1ad2              SUBS     r2,r2,r3
0004dc  1889              ADDS     r1,r1,r2
0004de  4a55              LDR      r2,|L1.1588|
0004e0  8a12              LDRH     r2,[r2,#0x10]  ; peak
0004e2  4b51              LDR      r3,|L1.1576|
0004e4  8a1b              LDRH     r3,[r3,#0x10]  ; valley
0004e6  1ad2              SUBS     r2,r2,r3
0004e8  1888              ADDS     r0,r1,r2
0004ea  2105              MOVS     r1,#5
0004ec  f7fffffe          BL       __aeabi_idivmod
0004f0  494e              LDR      r1,|L1.1580|
0004f2  39ca              SUBS     r1,r1,#0xca
0004f4  1844              ADDS     r4,r0,r1
0004f6  0fe0              LSRS     r0,r4,#31
0004f8  1900              ADDS     r0,r0,r4
0004fa  03c0              LSLS     r0,r0,#15
0004fc  0c00              LSRS     r0,r0,#16
0004fe  494e              LDR      r1,|L1.1592|
000500  8008              STRH     r0,[r1,#0]
;;;275    
;;;276    
;;;277                                peak[0].value = peak[1].value = peak[2].value = peak[3].value = peak[4].value = G_STAND;
000502  484a              LDR      r0,|L1.1580|
000504  3065              ADDS     r0,r0,#0x65
000506  494b              LDR      r1,|L1.1588|
000508  8208              STRH     r0,[r1,#0x10]
00050a  8188              STRH     r0,[r1,#0xc]
00050c  8108              STRH     r0,[r1,#8]
00050e  8088              STRH     r0,[r1,#4]
000510  8008              STRH     r0,[r1,#0]
;;;278                                valley[0].value = valley[1].value = valley[2].value = valley[3].value = valley[4].value =G_STAND;
000512  4945              LDR      r1,|L1.1576|
000514  8208              STRH     r0,[r1,#0x10]
000516  8188              STRH     r0,[r1,#0xc]
000518  8108              STRH     r0,[r1,#8]
00051a  8088              STRH     r0,[r1,#4]
00051c  8008              STRH     r0,[r1,#0]
;;;279                                peak[0].time = peak[1].time = peak[2].time = peak[3].time = peak[4].time = 0;
00051e  2100              MOVS     r1,#0
000520  4844              LDR      r0,|L1.1588|
000522  7481              STRB     r1,[r0,#0x12]
000524  7381              STRB     r1,[r0,#0xe]
000526  7281              STRB     r1,[r0,#0xa]
000528  7181              STRB     r1,[r0,#6]
00052a  7081              STRB     r1,[r0,#2]
;;;280                                valley[0].time = valley[1].time = valley[2].time = valley[3].time = valley[4].time = 0;
00052c  483e              LDR      r0,|L1.1576|
00052e  7481              STRB     r1,[r0,#0x12]
000530  7381              STRB     r1,[r0,#0xe]
000532  7281              STRB     r1,[r0,#0xa]
000534  7181              STRB     r1,[r0,#6]
000536  7081              STRB     r1,[r0,#2]
;;;281    
;;;282                                que_value[0] = que_value[1] = que_value[2] = que_value[3] = que_value[4]  = cur.value = pre.value = G_STAND;
000538  483c              LDR      r0,|L1.1580|
00053a  3065              ADDS     r0,r0,#0x65
00053c  493f              LDR      r1,|L1.1596|
00053e  8008              STRH     r0,[r1,#0]
000540  493f              LDR      r1,|L1.1600|
000542  8008              STRH     r0,[r1,#0]
000544  493f              LDR      r1,|L1.1604|
000546  8108              STRH     r0,[r1,#8]
000548  80c8              STRH     r0,[r1,#6]
00054a  8088              STRH     r0,[r1,#4]
00054c  8048              STRH     r0,[r1,#2]
00054e  8008              STRH     r0,[r1,#0]
;;;283                                cur.time = pre.time = 0;
000550  2000              MOVS     r0,#0
000552  493a              LDR      r1,|L1.1596|
000554  7088              STRB     r0,[r1,#2]
000556  493a              LDR      r1,|L1.1600|
000558  7088              STRB     r0,[r1,#2]
00055a  e063              B        |L1.1572|
                  |L1.1372|
;;;284    
;;;285                            }
;;;286                            else
;;;287                            {
;;;288                                spe_num++;
00055c  483a              LDR      r0,|L1.1608|
00055e  7800              LDRB     r0,[r0,#0]  ; spe_num
000560  1c40              ADDS     r0,r0,#1
000562  4939              LDR      r1,|L1.1608|
000564  7008              STRB     r0,[r1,#0]
;;;289                                peak[spe_num].value = valley[spe_num].value = THRESHOLD_UP;
000566  4839              LDR      r0,|L1.1612|
000568  7809              LDRB     r1,[r1,#0]  ; spe_num
00056a  0089              LSLS     r1,r1,#2
00056c  4a2e              LDR      r2,|L1.1576|
00056e  5250              STRH     r0,[r2,r1]
000570  4935              LDR      r1,|L1.1608|
000572  7809              LDRB     r1,[r1,#0]  ; spe_num
000574  0089              LSLS     r1,r1,#2
000576  4a2f              LDR      r2,|L1.1588|
000578  5250              STRH     r0,[r2,r1]
;;;290                                peak[spe_num].time = valley[spe_num].value = THRESHOLD_DOWN;
00057a  482c              LDR      r0,|L1.1580|
00057c  4932              LDR      r1,|L1.1608|
00057e  7809              LDRB     r1,[r1,#0]  ; spe_num
000580  0089              LSLS     r1,r1,#2
000582  4a29              LDR      r2,|L1.1576|
000584  5250              STRH     r0,[r2,r1]
000586  208d              MOVS     r0,#0x8d
000588  492f              LDR      r1,|L1.1608|
00058a  7809              LDRB     r1,[r1,#0]  ; spe_num
00058c  0089              LSLS     r1,r1,#2
00058e  4a29              LDR      r2,|L1.1588|
000590  1889              ADDS     r1,r1,r2
000592  7088              STRB     r0,[r1,#2]
;;;291    
;;;292                                que_value[0] = que_value[1] = que_value[2] = que_value[3] = que_value[4]  = cur.value = pre.value = G_STAND;
000594  4825              LDR      r0,|L1.1580|
000596  3065              ADDS     r0,r0,#0x65
000598  4928              LDR      r1,|L1.1596|
00059a  8008              STRH     r0,[r1,#0]
00059c  4928              LDR      r1,|L1.1600|
00059e  8008              STRH     r0,[r1,#0]
0005a0  4928              LDR      r1,|L1.1604|
0005a2  8108              STRH     r0,[r1,#8]
0005a4  80c8              STRH     r0,[r1,#6]
0005a6  8088              STRH     r0,[r1,#4]
0005a8  8048              STRH     r0,[r1,#2]
0005aa  8008              STRH     r0,[r1,#0]
;;;293                                cur.time = pre.time = 0;
0005ac  2000              MOVS     r0,#0
0005ae  4923              LDR      r1,|L1.1596|
0005b0  7088              STRB     r0,[r1,#2]
0005b2  4923              LDR      r1,|L1.1600|
0005b4  7088              STRB     r0,[r1,#2]
0005b6  e035              B        |L1.1572|
                  |L1.1464|
;;;294    
;;;295                            }
;;;296                        }
;;;297                        else //  
;;;298                        {
;;;299                            pre.value = cur.value;
0005b8  4821              LDR      r0,|L1.1600|
0005ba  8800              LDRH     r0,[r0,#0]  ; cur
0005bc  491f              LDR      r1,|L1.1596|
0005be  8008              STRH     r0,[r1,#0]
;;;300                            pre.time = cur.time;
0005c0  481f              LDR      r0,|L1.1600|
0005c2  7880              LDRB     r0,[r0,#2]  ; cur
0005c4  7088              STRB     r0,[r1,#2]
0005c6  e02d              B        |L1.1572|
                  |L1.1480|
;;;301                        }
;;;302                    } // 
;;;303    
;;;304                }
;;;305                else    //  
;;;306                {
;;;307                    pre.value = cur.value;
0005c8  481d              LDR      r0,|L1.1600|
0005ca  8800              LDRH     r0,[r0,#0]  ; cur
0005cc  491b              LDR      r1,|L1.1596|
0005ce  8008              STRH     r0,[r1,#0]
;;;308                    pre.time = cur.time;
0005d0  481b              LDR      r0,|L1.1600|
0005d2  7880              LDRB     r0,[r0,#2]  ; cur
0005d4  7088              STRB     r0,[r1,#2]
0005d6  e025              B        |L1.1572|
                  |L1.1496|
;;;309                }
;;;310    
;;;311            } //  
;;;312    
;;;313    
;;;314            else   // 
;;;315            {
;;;316                if(cur.value >= valley[spe_num].value)
0005d8  4819              LDR      r0,|L1.1600|
0005da  8800              LDRH     r0,[r0,#0]  ; cur
0005dc  491a              LDR      r1,|L1.1608|
0005de  7809              LDRB     r1,[r1,#0]  ; spe_num
0005e0  0089              LSLS     r1,r1,#2
0005e2  4a11              LDR      r2,|L1.1576|
0005e4  5a51              LDRH     r1,[r2,r1]
0005e6  4288              CMP      r0,r1
0005e8  db07              BLT      |L1.1530|
;;;317                {
;;;318    
;;;319                    pre.value = cur.value;
0005ea  4815              LDR      r0,|L1.1600|
0005ec  8800              LDRH     r0,[r0,#0]  ; cur
0005ee  4913              LDR      r1,|L1.1596|
0005f0  8008              STRH     r0,[r1,#0]
;;;320                    pre.time = cur.time;
0005f2  4813              LDR      r0,|L1.1600|
0005f4  7880              LDRB     r0,[r0,#2]  ; cur
0005f6  7088              STRB     r0,[r1,#2]
0005f8  e014              B        |L1.1572|
                  |L1.1530|
;;;321    
;;;322                }
;;;323                else // 
;;;324                {
;;;325                    valley[spe_num].value = cur.value;
0005fa  4811              LDR      r0,|L1.1600|
0005fc  8800              LDRH     r0,[r0,#0]  ; cur
0005fe  4912              LDR      r1,|L1.1608|
000600  7809              LDRB     r1,[r1,#0]  ; spe_num
000602  0089              LSLS     r1,r1,#2
000604  4a08              LDR      r2,|L1.1576|
000606  5250              STRH     r0,[r2,r1]
;;;326                    valley[spe_num].time = cur.time;
000608  480d              LDR      r0,|L1.1600|
00060a  7880              LDRB     r0,[r0,#2]  ; cur
00060c  490e              LDR      r1,|L1.1608|
00060e  7809              LDRB     r1,[r1,#0]  ; spe_num
000610  0089              LSLS     r1,r1,#2
000612  1889              ADDS     r1,r1,r2
000614  7088              STRB     r0,[r1,#2]
;;;327    
;;;328                    pre.value = cur.value;
000616  480a              LDR      r0,|L1.1600|
000618  8800              LDRH     r0,[r0,#0]  ; cur
00061a  4908              LDR      r1,|L1.1596|
00061c  8008              STRH     r0,[r1,#0]
;;;329                    pre.time = cur.time;
00061e  4808              LDR      r0,|L1.1600|
000620  7880              LDRB     r0,[r0,#2]  ; cur
000622  7088              STRB     r0,[r1,#2]
                  |L1.1572|
;;;330                }
;;;331    
;;;332            } //  
;;;333    
;;;334        } //  
;;;335    }
000624  bd38              POP      {r3-r5,pc}
;;;336    
                          ENDP

000626  0000              DCW      0x0000
                  |L1.1576|
                          DCD      valley
                  |L1.1580|
                          DCD      0x0000038d
                  |L1.1584|
                          DCD      Thr_Down
                  |L1.1588|
                          DCD      peak
                  |L1.1592|
                          DCD      Thr_Wide
                  |L1.1596|
                          DCD      pre
                  |L1.1600|
                          DCD      ||cur||
                  |L1.1604|
                          DCD      que_value
                  |L1.1608|
                          DCD      spe_num
                  |L1.1612|
                          DCD      0x000004bc

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  peak
                          %        20
                  valley
                          %        20
                  que_value
                          %        10

                          AREA ||.data||, DATA, ALIGN=2

                  g_sum
                          DCD      0x00000000
                  ||cur||
                          DCD      0x00000000
                  pre
                          DCD      0x00000000
                  spe_num
00000c  0000              DCB      0x00,0x00
                  Thr_Up
00000e  0000              DCB      0x00,0x00
                  Thr_Down
000010  0000              DCB      0x00,0x00
                  Thr_Wide
000012  0000              DCB      0x00,0x00
                  que_num
000014  00                DCB      0x00
                  timing
000015  00                DCB      0x00
                  deadline
000016  0000              DCB      0x00,0x00
                  step_count
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Software\\Source\\step_count\\step_count.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___12_step_count_c_93d693af____REV16|
#line 115 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_step_count_c_93d693af____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___12_step_count_c_93d693af____REVSH|
#line 130
|__asm___12_step_count_c_93d693af____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___12_step_count_c_93d693af__nrf_delay_us|
#line 8 "..\\..\\..\\Software\\Include\\nrf_delay.h"
|__asm___12_step_count_c_93d693af__nrf_delay_us| PROC
#line 9

loop
 SUBS R0, R0, #1
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 BNE loop
 BX LR
	ENDP

;*** End   embedded assembler ***
